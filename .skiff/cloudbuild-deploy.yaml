# This file tells Google Cloud Build how to deploy the application.
# It can be attached to a variety of triggers, the default being whenever
# someone merges changes to the `master` branch.
timeout: '1800s'
steps:
# Pull the latest Docker image, so the build is faster.
- id: 'image.pull'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args: [
    '-c',
    'docker pull gcr.io/$PROJECT_ID/$REPO_NAME:latest || exit 0'
  ]
# Build the Docker image
- id: 'image.build'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:latest',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME:latest',
    '.',
  ]
# Push the Docker image to be deployed
- id: 'image.push'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA',
  ]
# Generate our Kubernetes configuration
- id: 'config'
  name: 'gcr.io/ai2-reviz/jsonnet'
  args: [
    'eval',
    '-y',
    '--output-file', './webapp.json',
    '--tla-str', 'env=$_ENV',
    '--tla-str', 'image=gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA',
    '--tla-str', 'sha=$COMMIT_SHA',
    '--tla-str', 'cause=Automated Skiff Deploy SHA:$COMMIT_SHA BUILD:$BUILD_ID',
    '--tla-str', 'branch=$BRANCH_NAME',
    '--tla-str', 'repo=$REPO_NAME',
    '--tla-str', 'buildId=$BUILD_ID',
    './webapp.jsonnet'
  ]
  dir: '.skiff'
# Deploy the image to Kubernetes
- id: 'deploy'
  name: 'gcr.io/ai2-reviz/rudder'
  args: [
    'deploy',
    '-f',
    'webapp.json'
  ]
  dir: '.skiff'
substitutions:
  _ENV: staging
images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME:latest'
]
artifacts:
  objects:
    location: 'gs://skiff-archive/$REPO_NAME/$_ENV/$BUILD_ID/$COMMIT_SHA'
    paths: ['.skiff/webapp.json']
